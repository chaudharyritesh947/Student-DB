<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /YkAAAAASUVORK5CYII=
</value>
  </data>
</root>