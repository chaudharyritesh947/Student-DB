using mx.lpu2020.StudentDBmanagement.DL;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace mx.lpu2020.StudentDBmanagement.BL
{
   public class Validation
    {       

        public int ValidateLogin(string username, string password)
        {
            try
            {
                int IsValidate = 0;
                if (string.IsNullOrEmpty(username) || string.IsNullOrWhiteSpace(username))
                {
                    IsValidate = 1;
                }
                else if (string.IsNullOrEmpty(password) || string.IsNullOrWhiteSpace(password))
                {
                    IsValidate = 2;
                }
                return IsValidate;
            }
            catch (Exception e)
            {
                throw e;
            }
        }


        public int ValidateAddRecord(string firstname, string lastname, string email, string city, string gender)
        {
            try
            {
                int IsValidate = 0;
                if (string.IsNullOrEmpty(firstname) || string.IsNullOrWhiteSpace(firstname))
                {
                    IsValidate = 1;
                }
                else if (string.IsNullOrEmpty(lastname) || string.IsNullOrWhiteSpace(lastname))
                {
                    IsValidate = 2;
                }
                else if (string.IsNullOrEmpty(email) || string.IsNullOrWhiteSpace(email))
                {
                    IsValidate = 3;
                }
                else if (string.IsNullOrEmpty(city) || string.IsNullOrWhiteSpace(city))
                {
                    IsValidate = 4;
                }
                else if (string.IsNullOrEmpty(gender) || string.IsNullOrWhiteSpace(gender))
                {
                    IsValidate = 5;
                }
                return IsValidate;
            }
            catch (Exception e)
            {
                throw e;
            }
        }



        public bool IsMaliciousAttempt(string Test)
        {
            bool isInjectionText = false;
            Regex r1 = new Regex("^[A-Za-z][A-Za-z0-9]*$");
            Match match = r1.Match(Test);
            if (match.Success)
            {
                isInjectionText = false;
            }
            else
            {
                isInjectionText = true;
            }
            return isInjectionText;
        }

        public bool IsMaliciousAttempt(string text1, string text2)
        {

            bool isInjectionText1 = false, isInjectionText2 = false;
            Regex r1 = new Regex("^[A-Za-z][A-Za-z0-9]*$");
            Match match = r1.Match(text1);
            if (match.Success)
            {

                isInjectionText1 = false;
            }
            else
            {
                isInjectionText1 = true;
            }
            match = r1.Match(text2);
            if (match.Success)
            {
                isInjectionText2 = false;
            }
            else
            {
                isInjectionText2 = true;
            }

            if (isInjectionText1 == false && isInjectionText2 == false)
            {
                return false;
            }

            return true;            
        }


        public bool IsMaliciousAttempt(string text1, string text2,string text3, string text4, string text5)
        {

            bool isInjectionText1 = false, isInjectionText2 = false, isInjectionText3 = false, isInjectionText4 = false, isInjectionText5 = false;
            Regex r1 = new Regex("^[A-Za-z][A-Za-z0-9]*$");
            Match match = r1.Match(text1);
            if (match.Success)
            {

                isInjectionText1 = false;
            }
            else
            {
                isInjectionText1 = true;
            }

            match = r1.Match(text2);
            if (match.Success)
            {
                isInjectionText2 = false;
            }
            else
            {
                isInjectionText2 = true;
            }           

            match = r1.Match(text3);
            if (match.Success)
            {
                isInjectionText2 = false;
            }
            else
            {
                isInjectionText2 = true;
            }

            match = r1.Match(text4);
            if (match.Success)
            {
                isInjectionText2 = false;
            }
            else
            {
                isInjectionText2 = true;
            }

            match = r1.Match(text5);
            if (match.Success)
            {
                isInjectionText2 = false;
            }
            else
            {
                isInjectionText2 = true;
            }

            if (isInjectionText1 == false && isInjectionText2 == false && isInjectionText3 == false && isInjectionText4 == false && isInjectionText5==false)
            {
                return false;
            }
            return true;
        }


    }
}
